name: AWS Lambda CI/CD Workflow

on:
  workflow_call:
    inputs:
      service_path:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.3"

      - name: Test Shared Libraries
        run: go test -v .
        working-directory: ./shared

      - name: Test
        run: go test -v .
        working-directory: ${{ inputs.service_path }}

  build:
    needs: [ test ]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.3"

      - name: Build Go Lambda Artifact
        run: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o bootstrap -tags lambda.norpc main.go
        working-directory: ${{ inputs.service_path }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: aws-lambda-executable
          path: ${{ inputs.service_path }}/bootstrap

  deploy:
    needs: [ build ]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Initialize Terraform
        run: terraform init
        working-directory: ${{ inputs.service_path }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: aws-lambda-executable
          path: ${{ inputs.service_path }}

      - name: Deploy with Terraform
        run: terraform apply -auto-approve
        working-directory: ${{ inputs.service_path }}